{"version":3,"sources":["Classes.js","Projects.js","App.js","reportWebVitals.js","index.js"],"names":["Classes","Segment","color","style","overflow","maxHeight","Item","Group","classes","map","item","index","Complete","completed","Icon","name","Content","Header","as","title","Description","description","Extra","Projects","top","fontSize","textAlign","Card","projects","IsLive","live","extra","href","target","Image","src","image","wrapped","ui","link","App","Menu","position","width","zIndex","fluid","size","icon","class","id","Container","text","padding","vertical","content","inverted","fontWeight","marginBottom","marginTop","Button","animated","visible","hidden","circular","floated","rounded","Divider","horizontal","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b07dd1f.chunk.js","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport { Icon, Item, Segment } from \"semantic-ui-react\";\nimport * as classes from \"./classes.json\";\n\nexport const Classes = () => {\n  return (\n    <Segment color=\"grey\" style={{ overflow: \"auto\", maxHeight: 350 }}>\n      <Item.Group>\n        {classes.classes.map((item, index) => {\n          let Complete = () => {\n            if (item.completed) {\n              return (\n                <Icon color=\"green\" name=\"check\">\n                  {\" \"}\n                  Completed{\" \"}\n                </Icon>\n              );\n            } else\n              return (\n                <Icon color=\"grey\" name=\"check\">\n                  {\" \"}\n                  In progress{\" \"}\n                </Icon>\n              );\n          };\n          return (\n            <Item key={index}>\n              <Item.Content>\n                <Item.Header as=\"a\">{item.title}</Item.Header>\n                <Item.Description>{item.description}</Item.Description>\n                <Item.Extra>\n                  <Complete />\n                </Item.Extra>\n              </Item.Content>\n            </Item>\n          );\n        })}\n      </Item.Group>\n    </Segment>\n  );\n};\n\nexport default Classes;\n","import React from \"react\";\nimport { Image, Icon, Card, Segment } from \"semantic-ui-react\";\nimport * as projects from \"./projects.json\";\n\nexport const Projects = () => {\n  return (\n    <Segment style={{ top: \"5em\" }}>\n      <h3 style={{ fontSize: \"2em\", textAlign: \"center\" }}>My Projects</h3>\n      <Card.Group>\n        {projects.projects.map((item, index) => {\n          let IsLive = () => {\n            if (item.live === \"prod\") {\n              return (\n                <Card.Content extra>\n                  <div>\n                    <Icon name=\"server\" />\n                    Project is down and underdevelopment for the fall 2021 semester. Check again soon!\n                  </div>\n                </Card.Content>\n              );\n            } else if (item.live) {\n              return (\n                <Card.Content extra>\n                  <a href={item.live} target=\"_blank\">\n                    <Icon name=\"server\" />\n                    See Project Live!\n                  </a>\n                </Card.Content>\n              );\n            } else {\n              return null;\n            }\n          };\n          return (\n            <Card key={index}>\n              <Image src={item.image} wrapped ui={false} />\n              <Card.Content>\n                <Card.Header>{item.title}</Card.Header>\n                <Card.Description>{item.description}</Card.Description>\n              </Card.Content>\n              <Card.Content extra>\n                <a href={item.link ? item.link : \"\"} target=\"_blank\">\n                  <Icon name=\"github\" />\n                  {item.link ? \"See Source Code!\" : \"No Source Code Available\"}\n                </a>\n              </Card.Content>\n              <IsLive />\n            </Card>\n          );\n        })}\n      </Card.Group>\n    </Segment>\n  );\n};\n\nexport default Projects;\n","import \"./App.css\";\nimport React from \"react\";\nimport {\n  Button,\n  Icon,\n  Header,\n  Container,\n  Segment,\n  Divider,\n  Image,\n  Menu,\n} from \"semantic-ui-react\";\nimport Classes from \"./Classes\";\nimport Projects from \"./Projects\";\n\nfunction App() {\n  return (\n    <div>\n      <Menu\n        style={{ position: \"fixed\", top: 0, width: \"100%\", zIndex: 10 }}\n        fluid\n        size=\"large\"\n      >\n        <Menu.Item icon=\"home\" href=\"#landing\" />\n        <Menu.Item name=\"Intro\" href=\"#section-2\" />\n        <Menu.Item name=\"Classes\" href=\"#section-3\" />\n        <Menu.Item name=\"Projects\" href=\"#section-4\" />\n      </Menu>\n      <div class=\"container-container\">\n        <section id=\"landing\" class=\"landing\">\n          <Container text>\n            <Segment style={{ padding: \"8em 0em\" }} vertical>\n              <Header\n                as=\"h2\"\n                content=\"Jonah Tjandra\"\n                inverted\n                style={{\n                  color: \"black\",\n                  fontSize: \"5em\",\n                  fontWeight: \"normal\",\n                  marginBottom: 0,\n                  marginTop: \"1em\",\n                }}\n              />\n              <Header\n                as=\"h2\"\n                content=\"Computer Science student and Software Developer\"\n                inverted\n                style={{\n                  color: \"black\",\n                  fontSize: \"1.5em\",\n                  fontWeight: \"normal\",\n                  marginBottom: 0,\n                  marginTop: 0,\n                }}\n              />\n              <a href=\"#section-2\">\n                <Button\n                  style={{ marginTop: \"1em\", marginBottom: \"1em\" }}\n                  size=\"huge\"\n                  animated\n                >\n                  <Button.Content inverted visible>\n                    Get to know more about me\n                  </Button.Content>\n                  <Button.Content hidden>\n                    <Icon name=\"right arrow\" />\n                  </Button.Content>\n                </Button>\n              </a>\n              <Button\n                href=\"https://github.com/jonahtjandra\"\n                target=\"_blank\"\n                circular\n                color=\"github\"\n                icon=\"github\"\n              />\n              <Button\n                href=\"https://www.linkedin.com/in/jonah-tjandra/\"\n                target=\"_blank\"\n                circular\n                color=\"linkedin\"\n                icon=\"linkedin\"\n              />\n            </Segment>\n          </Container>\n        </section>\n        <section id=\"section-2\" class=\"intro\">\n          <Segment style={{ top: 10 }}>\n            <Image\n              src=\"/jonah.jpg\"\n              size=\"tiny\"\n              href=\"#section-3\"\n              floated=\"left\"\n              rounded\n            />\n            <p>\n              Hi! My name is Jonah and I am a sophomore at the University of\n              Illinois Urbana - Champaign studying Computer Science. I was 12\n              years old when I got my first introduction to programming. Our\n              teacher taught us how to write instructions to a computer with\n              basic, an old programming language developed by Microsoft. I\n              remembered it being very satisfying to write logical and\n              arithmetic operations that the computers can perform precisely\n              instantaneously. It felt magical. I was so happy everytime it was\n              computer class, even if it was not a basic lesson, I would finish\n              up early and spend my time tinkering in basic. Since that moment\n              on, I fell in love with computers and started to do some of my own\n              web development projects and joined a computer club. Now, college\n              continues to develop my passion for computers and inspires me to\n              become a better programmer. Last semester I am involved in\n              Projects@ACM doing projects in time-series prediction of covid-19\n              cases. I was also part of the CS196 Course Staff doing many roles,\n              from project managing to creating and deploying a gradebook which\n              will be implemented next semester!{\" \"}\n              <a href=\"https://cs196.cs.illinois.edu/\" target=\"_blank\">\n                take a look here.\n              </a>{\" \"}\n              This summer, I am interning at Code Certain, a student startup, as\n              a Software Engineer doing Machine Learning.\n            </p>\n            <Segment>\n              <Button.Group vertical fluid>\n                <Button\n                  href=\"#section-3\"\n                  content=\"Click to see what interesting classes I have taken here.\"\n                  icon=\"university\"\n                  size=\"large\"\n                />\n                <Divider horizontal>and</Divider>\n                <Button\n                  href=\"#section-4\"\n                  content=\"Click here to see some cool projects I have made\"\n                  icon=\"github\"\n                  size=\"large\"\n                />\n              </Button.Group>\n            </Segment>\n          </Segment>\n        </section>\n        <section class=\"projects\" id=\"section-3\">\n          <Container text>\n            <Header\n              textAlign=\"center\"\n              as=\"h1\"\n              content=\"Interesting courses I have taken\"\n              style={{\n                color: \"black\",\n                fontSize: \"2em\",\n                fontWeight: \"normal\",\n                marginBottom: \"1em\",\n                marginTop: \"1em\",\n              }}\n            />\n          </Container>\n          <Classes />\n        </section>\n        <section class=\"projects\" id=\"section-4\">\n          <Projects />\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}